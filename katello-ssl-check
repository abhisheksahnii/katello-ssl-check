#!/usr/bin/env ruby
 
require 'openssl'
require 'optparse'
 
# setup colors
 
def colorize(text, color_code)
  "\e[#{color_code}m#{text}\e[0m"
end
 
def red(text); colorize(text, 31); end
def green(text); colorize(text, 32); end
 
# set up our options
 
@options = {}
 
# rubocop:disable LineLength
 
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: katello-certs-check --full (Checks all certs) --puppet (Checks only Puppet) --regular (Checks Katello/Foreman certs)"
 
  opts.on("--full", "Check Katello/Foreman/Puppet SSL") do |full|
    @options[:full] = full
  end
 
  opts.on("--puppet", "Check Puppet SSL") do |puppet|
    @options[:puppet] = puppet
  end
 
  opts.on("--regular", "Check Katello/Foreman SSL") do |regular|
    @options[:regular] = regular
  end
 
  opts.parse!
 
# define CA paths
 
@katello_default_ca = '/etc/pki/katello/certs/katello-default-ca.crt'
@katello_server_ca =  '/etc/pki/katello/certs/katello-default-ca.crt'
@puppet_ca =          '/var/lib/puppet/ssl/certs/ca.pem'
 
# set FQDN to variable
 
fqdn = `hostname -f`.chomp
 
# define SSL cert paths
 
@certs = [
    '/etc/pki/katello/qpid_router_client.crt',
    '/etc/pki/katello/qpid_router_server.crt',
    '/etc/pki/katello/qpid_client_striped.crt',
    '/etc/pki/katello/certs/java-client.crt',
    '/etc/pki/katello/certs/katello-apache.crt',
    '/etc/pki/katello/certs/pulp-client.crt',
    '/etc/foreman-proxy/ssl_cert.pem',
    "/etc/pki/katello/certs/#{fqdn}-qpid-broker.crt"
]
 
# SSL checks
 
def ssl_check
  @certs.each do |cert|
  puts "Checking the following cert #{cert}"
  sleep 1
  `openssl verify -CAfile #{@katello_default_ca} #{cert}`
  if $?.success?
     puts 'SSL cert looks good [ ' + green('GOOD') + ' ]'
     sleep 1
  elsif $?.success? == false
   `openssl verify -CAfile #{@katello_server_ca} #{cert}`
        puts 'SSL cert looks good [ ' + green('GOOD') + ' ]'
        sleep 1
  else puts 'There is an issue with the SSL certs on this Katello system [ ' + red('ERROR') + ' ]'
  sleep 1
  end
  end
end
 
def puppet_certs_check
  Dir.glob('/var/lib/puppet/ssl/certs/*.pem') do |cert|
  puts "Checking the following cert #{cert} against #{@puppet_ca}"
  sleep 1
  `openssl verify -CAfile #{@puppet_ca} #{cert}`
  if $?.success?
     puts 'SSL cert looks good [ ' + green('GOOD') + ' ]'
     sleep 1
  else puts 'There is an issue with the Puppet SSL certs on this Katello system [ ' + red('ERROR') + ' ]'
     sleep 1
   end
  end
 end
 
# check to see if custom certs are used
def check
hash1 = `md5sum /etc/pki/katello/certs/katello-default-ca.crt | awk '{ print $1 }'`.chomp
hash2 = `md5sum /etc/pki/katello/certs/katello-server-ca.crt | awk '{ print $1 }'`.chomp
 
if hash1 == hash2
  puts "Using default SSL certs from the installer, proceeding with check"
  sleep 1
  puts "\nChecking normal SSL".red
  ssl_check
else
  puts "Using custom SSL certs, proceeding with check"
  sleep 1
  puts "\nChecking normal SSL".red
  ssl_check
end
end
 
# calling methods based on options
  if @options[:full]
    check
    puppet_certs_check
  end
 
  if @options[:regular]
     check
  end
 
  if @options[:puppet]
     puppet_certs_check
  end
end
